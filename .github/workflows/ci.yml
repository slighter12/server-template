name: Go CI Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "IMAGE_NAME=my-app" >> $GITHUB_OUTPUT
          echo "REGISTRY=my-registry" >> $GITHUB_OUTPUT
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
        id: set-output

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23"
        id: go

      - name: Get dependencies
        run: |
          go mod tidy
          go mod download

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.62.0

      - name: Lint
        run: |
          go vet ./...
          go fmt ./...
          golangci-lint run

      - name: Build Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build \
          --build-arg VERSION=$TAG \
          --build-arg BUILT=$(date -Iseconds) \
          --build-arg GIT_COMMIT=$(git rev-parse HEAD) \
          --build-arg IMAGE_NAME=$IMAGE_NAME \
          -t $IMAGE_NAME:$TAG -f ./build/Dockerfile .

      - name: Run Tests in Docker
        run: |
          docker run --rm $IMAGE_NAME:$TAG make test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy the application
        run: |
          echo "Deploying the application..."
          # Add your deployment commands here, for example pushing Docker image to a registry
          docker tag $IMAGE_NAME:$TAG $REGISTRY/$IMAGE_NAME:$TAG
          docker push $REGISTRY/$IMAGE_NAME:$TAG
