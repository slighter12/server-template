package {{.PackageName}}

import (
	"context"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/codes"
)

type {{.ProxyName}} struct {
	{{.InterfaceName}} {{.InterfaceName}}
}

{{range .Methods}}
func (p *{{$.ProxyName}}) {{.Name}}({{.Params}}) ({{.Results}}) {
	tracer := otel.Tracer("{{$.TracerName}}")
	ctx, span := tracer.Start(ctx, "{{.Name}}")
	defer span.End()

	{{if .HasError}}
	result, err := p.{{$.InterfaceName}}.{{.Name}}({{.CallParams}})
	if err != nil {
		span.RecordError(err)
		span.SetStatus(codes.Error, err.Error())
	}
	return result, err
	{{else}}
	return p.{{$.InterfaceName}}.{{.Name}}({{.CallParams}})
	{{end}}
}
{{end}}
